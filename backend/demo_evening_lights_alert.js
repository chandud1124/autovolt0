const telegramService = require('./services/telegramService');

// Demo script to show evening lights security alert functionality
async function demoEveningLightsAlert() {
  console.log('🚨 Evening Lights Security Alert Demo\n');

  try {
    // Initialize telegram service first
    console.log('1️⃣ Initializing Telegram service...');
    await telegramService.initialize();
    console.log('✅ Telegram service initialized\n');

    // Sample data that would be generated by the evening lights monitor
    const sampleLightsData = {
      totalLightsOn: 5,
      lightsByClassroom: {
        'Room 101': [
          {
            deviceName: 'Classroom Controller A1',
            location: 'Front Row',
            lightsOn: ['Main Light', 'Reading Light'],
            count: 2
          }
        ],
        'Room 102': [
          {
            deviceName: 'Classroom Controller B2',
            location: 'Back Row',
            lightsOn: ['Main Light'],
            count: 1
          },
          {
            deviceName: 'Classroom Controller B3',
            location: 'Center Row',
            lightsOn: ['Main Light', 'Projector Light'],
            count: 2
          }
        ],
        'Library': [
          {
            deviceName: 'Library Controller L1',
            location: 'Reading Area',
            lightsOn: ['Ambient Light'],
            count: 1
          }
        ]
      }
    };

    console.log('2️⃣ Sample evening lights check results:');
    console.log(`   📊 Total lights still on: ${sampleLightsData.totalLightsOn}`);
    console.log('   🏫 Breakdown by classroom:');

    Object.keys(sampleLightsData.lightsByClassroom).forEach(classroom => {
      const devices = sampleLightsData.lightsByClassroom[classroom];
      console.log(`      ${classroom}:`);
      devices.forEach(device => {
        console.log(`        • ${device.deviceName} (${device.location}): ${device.lightsOn.join(', ')}`);
      });
    });
    console.log('');

    // Create the security alert
    console.log('3️⃣ Creating security alert...');
    const alertData = {
      alertname: 'Evening Lights Security Alert',
      summary: `${sampleLightsData.totalLightsOn} lights still on after 10 AM`,
      description: `🚨 *Evening Lights Alert*\n\n⚠️ ${sampleLightsData.totalLightsOn} light(s) are still ON after 10:00 AM\n\n` +
        Object.keys(sampleLightsData.lightsByClassroom).map(classroom => {
          const devices = sampleLightsData.lightsByClassroom[classroom];
          let classroomText = `*${classroom}:*\n`;
          devices.forEach(device => {
            classroomText += `  • ${device.deviceName}: ${device.lightsOn.join(', ')}\n`;
          });
          return classroomText;
        }).join('\n') +
        `*Time:* ${new Date().toLocaleString()}\n\n` +
        `*Please investigate and turn off unnecessary lights to save energy.*`,
      severity: 'warning',
      instance: 'evening_lights_monitor',
      value: sampleLightsData.totalLightsOn
    };

    console.log('4️⃣ Alert data prepared:');
    console.log(`   📢 Alert Name: ${alertData.alertname}`);
    console.log(`   📝 Summary: ${alertData.summary}`);
    console.log(`   ⚠️ Severity: ${alertData.severity}`);
    console.log(`   📍 Instance: ${alertData.instance}`);
    console.log('');

    // Send the alert (this will fail without proper bot token, but shows the process)
    console.log('5️⃣ Attempting to send security alert...');
    console.log('   (Note: This will likely fail without TELEGRAM_BOT_TOKEN environment variable)');
    console.log('');

    try {
      const results = await telegramService.sendAlert('security_alerts', alertData);

      const successCount = results.filter(r => r.success).length;
      const totalCount = results.length;

      console.log(`📤 Alert distribution results:`);
      console.log(`   ✅ Successful: ${successCount}/${totalCount} security personnel notified`);

      if (successCount > 0) {
        console.log('   🎯 Security personnel have been alerted about lights left on!');
      } else {
        console.log('   ⚠️ No security personnel received the alert (check subscriptions)');
      }

    } catch (sendError) {
      console.log(`❌ Alert sending failed: ${sendError.message}`);
      console.log('   This is expected without proper Telegram bot configuration');
      console.log('   In production, this would successfully notify security personnel');
    }

    console.log('');
    console.log('✅ Demo completed!');
    console.log('\n📋 Real-world functionality:');
    console.log('   • Automatically runs every day at 10:00 AM');
    console.log('   • Checks all classroom lights across the building');
    console.log('   • Sends detailed alerts to security personnel');
    console.log('   • Helps prevent energy waste and security issues');

  } catch (error) {
    console.error('❌ Demo failed:', error.message);
    console.error(error.stack);
  }
}

// Run the demo
if (require.main === module) {
  demoEveningLightsAlert().then(() => {
    console.log('\n🎉 Demo script completed');
    process.exit(0);
  }).catch((error) => {
    console.error('\n💥 Demo script failed:', error);
    process.exit(1);
  });
}

module.exports = { demoEveningLightsAlert };